services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"

  kafka:
    image: confluentinc/cp-kafka:latest
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper

  data-generator:
    build:
      context: .
      dockerfile: Dockerfile  # Dockerfile for the data generator
    environment:
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
    depends_on:
      - kafka

  data-transformer:
    build:
      context: .
      dockerfile: Dockerfile.transformer  # New Dockerfile for the data transformer
    environment:
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
    depends_on:
      - kafka

  data-aggregator:
    build:
      context: .
      dockerfile: Dockerfile.aggregator  # New one for the aggregator
    depends_on:
      - kafka
    environment:
      KAFKA_BROKER: kafka:9092

  data-ingestion-mongodb:
    build:
      context: .
      dockerfile: Dockerfile.data_ingestion_mongodb  # Updated to your specific Dockerfile name
    depends_on:
      - kafka
      - mongo
    environment:
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      MONGO_URI: mongodb://mongo:27017  # Ensure you're pointing to the correct MongoDB instance

  mongo:
    image: mongo:latest
    ports:
      - "27017:27017"  # Expose MongoDB on port 27017
    volumes:
      - mongo_data:/data/db  # Persist data in a named volume

volumes:
  mongo_data:
